;Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
;1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
;By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

(defun fib (x)
 (if (<= x 1)
     x
     (+ (fib (- x 1)) (fib (- x 2)))))

(defun fib-series ()
  "Calculates the fibonacci series up to and including the value 4,000,000"
  (loop for i from 1 to 100 ; no way to do endless loop-with-index that I can find; 101 fibonacci numbers should exceed 4,000,000
        while (<= (fib i) 4000000)  ; stop when you hit 4,000,001
        collect (fib i)))

(reduce #'+ (remove-if-not #'evenp (fib-series)))


